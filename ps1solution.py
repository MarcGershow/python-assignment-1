#!/usr/bin/env python3
# -*- coding: utf-8 -*-
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭟ=int
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ݨ=round
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬몋=max
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗑘=min
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐲉=range
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𞠱=True
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱂ=float
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﰜ=input
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬틵=Exception
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐪛=18500.0
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗫲=0.05
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐠼=0.05
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬尗=3.0
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱒ=0.0
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇=1000000
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𠄹=0.1
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣦧=40
import numpy as np
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬펫=np.inf
ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱=np.Inf
def partASolution():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬밥()
def partBSolution():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𪸌()
def partCSolution():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬䎞()
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬밥():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter your salary > ",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter amount to contribute > ",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰢=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣠤(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟)
 total,nyu=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﲢ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰢)
 print("You will contribute",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰢,"and nyu will contribute",nyu,"for a total of",total)
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𪸌():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter your salary >",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter percentage to save each year (0 - 100) > ",(0,100))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬눂=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter after-inflation rate of return (-100 - 100) > ",(-100,100))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐭃=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter after-inflation annual raise (-100 - 100) > ",(-100,100))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭟ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter the number of years to work before retirement > ",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱)))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬눂,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐭃,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳)
 print("When you retire, you will have saved $",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ݨ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ,2),sep='')
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬䎞():
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter your salary >",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭟ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ("please enter the number of years to work before retirement > ",(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱)))
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𨬾=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐣪(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳);
 if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𨬾<0):
  print("Congratulations, you can reach your goal of $",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇," with only NYU's base contribution",sep='')
  return
 if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𨬾>100):
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࡕ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,100,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬尗,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱒ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳)
  print("The maximum amount you can save in ",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳," years is $",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ݨ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࡕ,2),sep='')
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𡨄=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬س(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ)
  if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𡨄>ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣦧):
   print("I'm sorry. Even if you work ",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣦧," you won't be able to save $",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇)
   return
  else:
   ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𡨄
   ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𨬾=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐣪(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳)
 print("With an annual contribution of ",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ݨ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𨬾,1),"%, you can retire with $",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇," in ",ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𬯳," years",sep='')
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣠤(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟):
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬몋(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,0)
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗑘(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟)
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗑘(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐪛)
 return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﲢ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟):
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣠤(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟)
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𩟻=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗫲*ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ+ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗑘(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐠼*ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ)
 return(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𩟻+ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𩟻)
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,savingsPercent,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬눂,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐭃,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗):
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ=0
 for j in ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐲉(0,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗):
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ*=(1+ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬눂/100.0)
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟,_nyupart=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﲢ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,savingsPercent/100.0*ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ)
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ+=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𗲟
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ*=(1+ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐭃/100.0)
 return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﷵ
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐣪(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗,goal=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇,rateOfReturn=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬尗,annualRaise=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱒ,precision=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𠄹):
 if ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,0,rateOfReturn,annualRaise,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗)>=goal:
  return-1
 if ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,100,rateOfReturn,annualRaise,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗)<goal:
  return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬펫
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﯙ=0
 ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰍=100
 while ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰍-ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﯙ>precision:
  ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬瘔=0.5*(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰍+ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﯙ)
  if ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬瘔,rateOfReturn,annualRaise,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗)>=goal:
   ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐰍=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬瘔
  else:
   ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﯙ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬瘔
 return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬瘔
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬س(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,goal=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬禇,rateOfReturn=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬尗,annualRaise=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱒ):
 for ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗 in ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𐲉(1,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭟ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣦧+2)):
  if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬㮇(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ࠂ,100,rateOfReturn,annualRaise,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗)>=goal):
   break
 if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗>ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𣦧):
  return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬펫
 else:
  return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𧑗
def ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﭩ(prompt,validRange=[-ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱,ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬旱]):
 while ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬𞠱:
  try:
   ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ሆ=ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﱂ(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ﰜ(prompt))
  except ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬틵:
   print("Please enter a number")
  else:
   if(ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ሆ>=validRange[0]and ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ሆ<=validRange[1]):
    return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ሆ
   else:
    print("Please enter a value in the range [",validRange[0],",",validRange[1],")")
 return ﰶ𫠿𐭂𣣵疝𑐧𐪅𪆄𬬾𢡊𞤟𦕔𬪈梽𞠻ﳚ𓌀郘𐮀𐡀𝓜𣱚𗉅ﰍ𤽪ꀇﴕ𐰼窺𣜩𐰬𘖗ط𐲂𐤅ﲍﮇ𞤱㧬ሆ
print("Module loaded: type partASolution() to see expected behavior of partA, partBSolution() to see expected behavior of partB, etc.")
# Created by pyminifier (https://github.com/liftoff/pyminifier)
